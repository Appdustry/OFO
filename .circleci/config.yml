# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
commands:
  create_concatenated_package_lock:
    description: "Concatenate all package-lock.json files recognized by lerna.js into single file. File is used as checksum source for part of caching key."
    parameters:
      filename:
        type: string
    steps:
      - run:
          name: Combine package-lock.json files to single file
          command: npx lerna list -p -a | awk -F packages '{printf "\"packages%s/package-lock.json\" ", $2}' | xargs cat > << parameters.filename >>
orbs:
  node: circleci/node@1.1.6
  github: haskell-works/github-release@1.0.0
jobs:
  build-and-upload:
    executor:
      name: 'node/default'
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - run: |
          sudo apt update
          sudo apt install golang-go -y
          export GOPATH=$HOME/go
      #- create_concatenated_package_lock:
      #    filename: combined-package-lock.txt
      #- restore_cache:
      #    keys:
      #      - v3-deps-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}
      #      - v3-deps
      - node/with-cache:
          steps:
            - run:
                  name: Install dependencies
                  command: |
                    cd frontend
                    npm i
                    cd ../backend
                    npm i
            - run:
                name: Build frontend
                command: |
                  cd frontend
                  npm run build:prod
            - run:
                name: Move frontend to backend
                command: |
                  cd frontend
                  cp ./dist/ofo-app/* ../backend/src/client/
            - run:
                name: Build backend
                command: |
                  cd backend
                  npm run build
            - run:
                name: Zip for release
                command: |
                  zip -r release_upload.zip backend/dist/*
            - github/release:
                tag: v$CIRCLE_BUILD_NUM
                title: Release v$CIRCLE_BUILD_NUM
                artefacts-folder: release_upload.zip
workflows:
    build-and-upload:
      jobs:
        - build-and-upload
